/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteMiddle(ListNode head) {
        // ListNode current = head;
        // int count = 0;

        // while(current != null){
        //     current = current.next;
        //     count++;
        // }
        // int mid = (count/2)+1;

        // for(int i=0;current != null && i<mid;i++){
        //     current = current.next;
        // }
        if(head == null || head.next == null){
            return null;
        }
        if(head.next.next == null){
            head.next = null;
            return head;
        }
        ListNode fast = head.next.next;
        ListNode slow = head;
        while(fast != null && fast.next != null){
            fast = fast.next.next;
            slow = slow.next;
        }
        slow.next = slow.next.next;
        return head;
    }
}
